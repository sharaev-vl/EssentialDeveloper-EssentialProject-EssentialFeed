
// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = Apple Development
CODE_SIGN_IDENTITY[sdk=macosx*] = -



// Combine HiDPI Images
// 
// Combines image files at different resolutions into one multi-page TIFF file that is
// HiDPI compliant for macOS 10.7 and later. Only image files in the same directory and
// with the same base name and extension are combined. The file names must conform to the
// naming convention used in HiDPI.

COMBINE_HIDPI_IMAGES = YES



// Current Project Version
// 
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleVersion](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion)
// key in the `Info.plist` file to the value of this build setting.

CURRENT_PROJECT_VERSION = 1



// Defines Module
// 
// If enabled, the product will be treated as defining its own module. This enables
// automatic production of LLVM module map files when appropriate, and allows the product
// to be imported as a module.

DEFINES_MODULE = YES



// Compatibility Version
// 
// Determines the compatibility version of the resulting library, bundle, or framework
// binary. See [Dynamic Library Design
// Guidelines](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html#//apple_ref/doc/uid/TP40002013-SW19)
// in [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html)
// for details on assigning version numbers of dynamic libraries.

DYLIB_COMPATIBILITY_VERSION = 1



// Current Library Version
// 
// This setting defines the current version of any framework built by the project. As
// with `CURRENT_PROJECT_VERSION`, the value must be an integer or floating point number,
// such as `57` or `365.8`. See [Dynamic Library Design
// Guidelines](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html#//apple_ref/doc/uid/TP40002013-SW19)
// in [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html)
// for details on assigning version numbers of dynamic libraries.

DYLIB_CURRENT_VERSION = 1



// Dynamic Library Install Name Base
// 
// Sets the base value for the internal `install path` (`LC_ID_DYLIB`) in a dynamic
// library. This will be combined with the `EXECUTABLE_PATH` to form the full install
// path. Setting `LD_DYLIB_INSTALL_NAME` directly will override this setting. This
// setting defaults to the target's `INSTALL_PATH`. It is ignored when building any
// product other than a dynamic library.

DYLIB_INSTALL_NAME_BASE = @rpath



ENABLE_MODULE_VERIFIER = YES



// User Script Sandboxing
// 
// If enabled, the build system will sandbox user scripts to disallow undeclared
// input/output dependencies.

ENABLE_USER_SCRIPT_SANDBOXING = NO



// Generate Info.plist File
// 
// If enabled, automatically generate an Info.plist file with content from build
// settings, and from content in the file pointed to by `INFOPLIST_FILE`, if defined.

GENERATE_INFOPLIST_FILE = YES



// Copyright (Human-Readable)
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [NSHumanReadableCopyright](https://developer.apple.com/documentation/bundleresources/information_property_list/nshumanreadablecopyright)
// key in the `Info.plist` file to the value of this build setting.

INFOPLIST_KEY_NSHumanReadableCopyright = 



// Installation Directory
// 
// The directory in which to install the build products. This path is prepended by the
// `DSTROOT`.

INSTALL_PATH = $(LOCAL_LIBRARY_DIR)/Frameworks



// iOS Deployment Target
// 
// Code will load on this and later versions of iOS. Framework APIs that are unavailable
// in earlier versions will be weak-linked; your code should check for null function
// pointers or specific system versions before calling newer APIs.

IPHONEOS_DEPLOYMENT_TARGET = 17.0



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/../Frameworks @loader_path/Frameworks



// macOS Deployment Target
// 
// Code will load on this and later versions of macOS. Framework APIs that are
// unavailable in earlier versions will be weak-linked; your code should check for `null`
// function pointers or specific system versions before calling newer APIs.

MACOSX_DEPLOYMENT_TARGET = 12.4



// Marketing Version
// 
// This setting defines the user-visible version of the project.
// 
// When `GENERATE_INFOPLIST_FILE` is enabled, sets the value of the
// [CFBundleShortVersionString](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring)
// key in the `Info.plist` file to the value of this build setting.

MARKETING_VERSION = 1.0



MODULE_VERIFIER_SUPPORTED_LANGUAGE_STANDARDS = gnu17 gnu++20



MODULE_VERIFIER_SUPPORTED_LANGUAGES = objective-c objective-c++



// Provisioning Profile
// 
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.

PROVISIONING_PROFILE_SPECIFIER = 



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



// Supported Platforms
// 
// The list of supported platforms from which a base SDK can be used. This setting is
// used if the product can be built for multiple platforms using different SDKs.

SUPPORTED_PLATFORMS = macosx iphonesimulator iphoneos



// Use Compiler to Extract Swift Strings
// 
// When enabled, the Swift compiler will be used to extract Swift string literal and
// interpolation `LocalizedStringKey` and `LocalizationKey` types during localization
// export.

SWIFT_EMIT_LOC_STRINGS = YES
